{"version":3,"sources":["../src/index.js"],"names":["Feature","Helpers","requireConfig","require","ExternalServiceError","module","exports","type","SERVICE","groupable","load_","app","options","name","accountSid","authToken","from","Twilio","tryRequire","client","service","sendSms_","to","body","messages","create","error","registerService"],"mappings":";;;;AAAA,MAAM;AACFA,EAAAA,OADE;AAEFC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAFP,IAGFC,OAAO,CAAC,WAAD,CAHX;;AAIA,MAAM;AAAEC,EAAAA;AAAF,IAA2BD,OAAO,CAAC,aAAD,CAAxC;;AAOAE,MAAM,CAACC,OAAP,GAAiB;AAKbC,EAAAA,IAAI,EAAEP,OAAO,CAACQ,OALD;AAWbC,EAAAA,SAAS,EAAE,IAXE;AA4BbC,EAAAA,KAAK,EAAE,gBAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoC;AACvCX,IAAAA,aAAa,CAACS,GAAD,EAAMC,OAAN,EAAe,CAAC,YAAD,EAAe,WAAf,EAA4B,MAA5B,CAAf,EAAoDC,IAApD,CAAb;AAEA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,QAAkCJ,OAAxC;AACA,UAAMK,MAAM,GAAGN,GAAG,CAACO,UAAJ,CAAe,QAAf,CAAf;AAEA,UAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWH,UAAX,EAAuBC,SAAvB,CAAf;AAEA,UAAMK,OAAO,GAAG;AACZJ,MAAAA,IADY;AAEZK,MAAAA,QAAQ,EAAE,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AAC1B,YAAI;AACA,iBAAO,MAAMJ,MAAM,CAACK,QAAP,CAAgBC,MAAhB,CAAuB;AAAET,YAAAA,IAAF;AAAQM,YAAAA,EAAR;AAAYC,YAAAA;AAAZ,WAAvB,CAAb;AACH,SAFD,CAEE,OAAOG,KAAP,EAAc;AACZ,gBAAM,IAAItB,oBAAJ,CACF,gCADE,EAEFsB,KAFE,CAAN;AAIH;AACJ;AAXW,KAAhB;AAcAf,IAAAA,GAAG,CAACgB,eAAJ,CAAoBd,IAApB,EAA0BO,OAA1B;AACH;AAnDY,CAAjB","sourcesContent":["const {\n    Feature,\n    Helpers: { requireConfig },\n} = require('@genx/app');\nconst { ExternalServiceError } = require('@genx/error');\n\n/**\n * Twilio SMS feature\n * @module Feature_SmsTwilio\n */\n\nmodule.exports = {\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * This feature can be grouped by serviceGroup\n     * @member {boolean}\n     */\n    groupable: true,\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} options - Options for the feature\n     * @property {string} options.accountSid - The ACCOUNT SID param.\n     * @property {string} options.authToken - The AUTH TOKEN param.\n     * @property {string} options.from - The from param, e.g. +14155552671\n     * @see {@link https://www.twilio.com/docs/glossary/what-e164|E.164}\n     * @returns {Promise.<*>}\n     *\n     * @example\n     *\n     * accountSid: '<ACCOUNT SID>',\n     * authToken: '<AUTH TOKEN>'\n     */\n    load_: async function (app, options, name) {\n        requireConfig(app, options, ['accountSid', 'authToken', 'from'], name);\n\n        const { accountSid, authToken, from } = options;\n        const Twilio = app.tryRequire('twilio');\n\n        const client = new Twilio(accountSid, authToken);\n\n        const service = {\n            from,\n            sendSms_: async (to, body) => {\n                try {\n                    return await client.messages.create({ from, to, body });\n                } catch (error) {\n                    throw new ExternalServiceError(\n                        'Failed to send sms via twilio.',\n                        error\n                    );\n                }\n            },\n        };\n\n        app.registerService(name, service);\n    },\n};\n"],"file":"index.js"}